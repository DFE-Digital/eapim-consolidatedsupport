{
  "swagger": "2.0",
  "info": {
    "title": "Helpdesk API",
    "version": "1.0",
    "description": "Provides access to Helpdesk related operations."
  },
  "host": "middleware-lab2.zendesk.com",
  "schemes": [
    "https"
  ],
  "basePath": "/api/v2",
  "paths": {
    "/organizations.json": {
      "post": {
        "summary": "Create Organisation",
        "description": "Creates an organisation entity.",
        "operationId": "create-organisation",
        "parameters": [
          {
            "in": "body",
            "name": "Organisation Data",
            "description": "A JSON payload containing the organisation data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/helpdesk-data"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The organisation was created with success.",
            "headers": {
              "Entity-Id": {
                "type": "string",
                "description": "The ID of the created organisation."
              }
            }
          }
        }
      }
    },
    "/organizations/{id}.json": {
      "put": {
        "summary": "Update Organisation",
        "description": "Updates an organisation entity.",
        "operationId": "update-organisation",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The id of the organisation in which to update."
          },
          {
            "in": "body",
            "name": "Organisation Data",
            "description": "A partial organisation entity, containing the fields in which to update.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/helpdesk-data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The organisation was updated with success."
          }
        }
      }
    },
    "/tickets/{id}/tags.json": {
      "delete": {
        "summary": "Delete Ticket Tags",
        "operationId": "delete-ticket-tags",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The id of the ticket in which to remove the tags from."
          },
          {
            "in": "body",
            "name": "Tag Data",
            "description": "A JSON payload containing the tag data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/helpdesk-data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The tags were deleted with success."
          }
        }
      }
    },
    "/users.json": {
      "post": {
        "summary": "Create User",
        "description": "Creates a user entity.",
        "operationId": "create-user",
        "parameters": [
          {
            "in": "body",
            "name": "User Data",
            "description": "A JSON payload containing the user data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/helpdesk-data"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "The user was created with success.",
            "headers": {
              "Entity-Id": {
                "type": "string",
                "description": "The ID of the created user."
              }
            }
          }
        }
      }
    },
    "/users/{id}.json": {
      "put": {
        "summary": "Update User",
        "description": "Updates a user entity.",
        "operationId": "update-user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The id of the user in which to update."
          },
          {
            "in": "body",
            "name": "User Data",
            "description": "A JSON payload containing the user data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/helpdesk-data"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The user was updated with success."
          }
        }
      }
    },
    "/heart-beat": {
      "get": {
        "description": "Standard diagnostics method, used to test the health of the facade's underlying system.",
        "operationId": "heart-beat",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The standard/only response from the method."
          }
        }
      }
    }
  },
  "definitions": {
    "helpdesk-data": {
      "type": "object"
    }
  }
}