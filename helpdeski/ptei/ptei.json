{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "LogicAppName": {
      "defaultValue": "s113d01-ptei-la-05",
      "type": "String"
    },
    "MiddlewareEnvironmentPrefix": {
      "defaultValue": "s113d01",
      "type": "String"
    },
    "DataServicesKeyName": {
      "defaultValue": "c106d01-apim-custeng-dataservicessubscriptionkey",
      "type": "String"
    },
    "RosettaStoneApiTokenRequestPayloadName": {
      "defaultValue": "s113d01-fa-02-rosettastoneapitokenrequestpayload",
      "type": "String"
    },
    "OrchestratorApiTokenRequestPayloadName": {
      "defaultValue": "s113d01-la-05-orchestratorapitokenrequestpayload",
      "type": "String"
    },
    "ApimBaseUrl": {
      "defaultValue": "https://dev-api-customerengagement.platform.education.gov.uk/",
      "type": "String"
    }
  },
  "variables": {
    "OAuthTokenEndpoint": "https://login.microsoftonline.com/9c7d9dd3-840c-4b3f-818e-552865082e16/oauth2/token",
    "KeyVaultUrlBase": "[concat('https://', parameters('MiddlewareEnvironmentPrefix'), '-kv-01.vault.azure.net/secrets/')]",
    "KeyVaultUrlSuffix": "?api-version=2016-10-01",
    "DataServicesKeyUrl": "[concat(variables('KeyVaultUrlBase'), parameters('DataServicesKeyName'), variables('KeyVaultUrlSuffix'))]",
    "RosettaStoneApiTokenPayloadUrl": "[concat(variables('KeyVaultUrlBase'), parameters('RosettaStoneApiTokenRequestPayloadName'), variables('KeyVaultUrlSuffix'))]",
    "OrchestratorApiTokenRequestPayloadUrl": "[concat(variables('KeyVaultUrlBase'), parameters('OrchestratorApiTokenRequestPayloadName'), variables('KeyVaultUrlSuffix'))]",
    "RegisterTranslateSorToTargetUrl": "[concat(parameters('ApimBaseUrl'), 'v1/rosetta-stone/register-translate-sor-to-target')]",
    "ReferenceDataTranslateUrl": "[concat(parameters('ApimBaseUrl'), 'v1/rosetta-stone/reference-data-translate')]",
    "ProcessEventInformationUrl": "[concat(parameters('ApimBaseUrl'), 'v1/orchestrator/process-event-information')]"
  },
  "resources": [
    {
      "type": "Microsoft.Logic/workflows",
      "apiVersion": "2017-07-01",
      "name": "[parameters('LogicAppName')]",
      "location": "westeurope",
      "tags": {
        "Environment": "Dev",
        "Parent Business": "TBC",
        "Service Offering": "TBC"
      },
      "identity": {
        "principalId": null,
        "tenantId": null,
        "type": "SystemAssigned"
      },
      "properties": {
        "state": "Enabled",
        "definition": {
          "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "triggers": {
            "manual": {
              "type": "Request",
              "kind": "Http",
              "inputs": {
                "schema": {}
              }
            }
          },
          "actions": {
            "CRM_Integration": {
              "actions": {
                "Check_if_Organization_is_CrmSuitable": {
                  "actions": {
                    "Check_if_User_is_CrmSuitable": {
                      "actions": {
                        "Create_or_Update_Contact_in_CRM": {
                          "actions": {
                            "Check_results_are_more_than_zero_(CNT)": {
                              "actions": {
                                "Set_eventDescription_=_\"updated\"_(2)": {
                                  "runAfter": {},
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "eventDescription",
                                    "value": "updated"
                                  }
                                }
                              },
                              "runAfter": {
                                "Request_User_ID_from_Rosetta_Stone": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_eventDescription_=_\"created\"_(2)": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "eventDescription",
                                      "value": "created"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(body('Parse_Rosetta_Stone_Results_(CNT)'))",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Request_User_ID_from_Rosetta_Stone": {
                              "actions": {
                                "Parse_Rosetta_Stone_Results_(CNT)": {
                                  "runAfter": {
                                    "Quiz_Rosetta_Stone_for_User_ID": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Quiz_Rosetta_Stone_for_User_ID')",
                                    "schema": {
                                      "items": {
                                        "properties": {
                                          "SourceEntityBK": {
                                            "type": "string"
                                          },
                                          "SourceSorBK": {
                                            "type": "string"
                                          },
                                          "SourceSorUIDVal": {
                                            "type": "string"
                                          },
                                          "TargetSorBK": {
                                            "type": "string"
                                          },
                                          "TargetSorUIDVal": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "SourceSorBK",
                                          "SourceEntityBK",
                                          "SourceSorUIDVal",
                                          "TargetSorBK",
                                          "TargetSorUIDVal"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  }
                                },
                                "Quiz_Rosetta_Stone_for_User_ID": {
                                  "runAfter": {},
                                  "type": "Http",
                                  "inputs": {
                                    "body": {
                                      "SourceEntityBK": "CNT",
                                      "SourceSorBK": "HD",
                                      "SourceSorUIDVal": "@{triggerBody()?['ticket']?['requester']?['id']}",
                                      "TargetSorBK": "SCRM"
                                    },
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                                      "Content-Type": "application/json",
                                      "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                    },
                                    "method": "POST",
                                    "retryPolicy": {
                                      "type": "none"
                                    },
                                    "uri": "[variables('RegisterTranslateSorToTargetUrl')]"
                                  }
                                }
                              },
                              "runAfter": {},
                              "type": "Scope"
                            },
                            "Trigger_the_helpdeski-user-eventDescription_event_synchronously": {
                              "runAfter": {
                                "Check_results_are_more_than_zero_(CNT)": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "body": {
                                  "eventIdentifier": {
                                    "eventDescription": "@{variables('eventDescription')}",
                                    "systemEntity": "user",
                                    "systemName": "helpdeski"
                                  },
                                  "eventInformation": "@triggerBody()"
                                },
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Orchestrator_OAuth_Token')?['access_token']}",
                                  "Content-Type": "application/json",
                                  "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                },
                                "method": "POST",
                                "retryPolicy": {
                                  "type": "none"
                                },
                                "uri": "[variables('ProcessEventInformationUrl')]"
                              }
                            }
                          },
                          "runAfter": {},
                          "type": "Scope"
                        },
                        "Create_or_Update_Ticket_in_CRM": {
                          "actions": {
                            "Check_results_are_more_than_zero_(TIC)": {
                              "actions": {
                                "Set_eventDescription_=_\"updated\"_(3)": {
                                  "runAfter": {},
                                  "type": "SetVariable",
                                  "inputs": {
                                    "name": "eventDescription",
                                    "value": "updated"
                                  }
                                }
                              },
                              "runAfter": {
                                "Request_Ticket_ID_from_Rosetta_Stone": [
                                  "Succeeded"
                                ]
                              },
                              "else": {
                                "actions": {
                                  "Set_eventDescription_=_\"created\"_(3)": {
                                    "runAfter": {},
                                    "type": "SetVariable",
                                    "inputs": {
                                      "name": "eventDescription",
                                      "value": "created"
                                    }
                                  }
                                }
                              },
                              "expression": {
                                "and": [
                                  {
                                    "greater": [
                                      "@length(body('Parse_Rosetta_Stone_Results_(TIC)'))",
                                      0
                                    ]
                                  }
                                ]
                              },
                              "type": "If"
                            },
                            "Request_Ticket_ID_from_Rosetta_Stone": {
                              "actions": {
                                "Parse_Rosetta_Stone_Results_(TIC)": {
                                  "runAfter": {
                                    "Quiz_Rosetta_Stone_for_Ticket_ID": [
                                      "Succeeded"
                                    ]
                                  },
                                  "type": "ParseJson",
                                  "inputs": {
                                    "content": "@body('Quiz_Rosetta_Stone_for_Ticket_ID')",
                                    "schema": {
                                      "items": {
                                        "properties": {
                                          "SourceEntityBK": {
                                            "type": "string"
                                          },
                                          "SourceSorBK": {
                                            "type": "string"
                                          },
                                          "SourceSorUIDVal": {
                                            "type": "string"
                                          },
                                          "TargetSorBK": {
                                            "type": "string"
                                          },
                                          "TargetSorUIDVal": {
                                            "type": "string"
                                          }
                                        },
                                        "required": [
                                          "SourceSorBK",
                                          "SourceEntityBK",
                                          "SourceSorUIDVal",
                                          "TargetSorBK",
                                          "TargetSorUIDVal"
                                        ],
                                        "type": "object"
                                      },
                                      "type": "array"
                                    }
                                  }
                                },
                                "Quiz_Rosetta_Stone_for_Ticket_ID": {
                                  "runAfter": {},
                                  "type": "Http",
                                  "inputs": {
                                    "body": {
                                      "SourceEntityBK": "TIC",
                                      "SourceSorBK": "HD",
                                      "SourceSorUIDVal": "@{triggerBody()?['ticket']?['id']}",
                                      "TargetSorBK": "SCRM"
                                    },
                                    "headers": {
                                      "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                                      "Content-Type": "application/json",
                                      "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                    },
                                    "method": "POST",
                                    "retryPolicy": {
                                      "type": "none"
                                    },
                                    "uri": "[variables('RegisterTranslateSorToTargetUrl')]"
                                  }
                                }
                              },
                              "runAfter": {},
                              "type": "Scope"
                            },
                            "Trigger_the_helpdesk-ticket-eventDescription_event_synchronously": {
                              "runAfter": {
                                "Check_results_are_more_than_zero_(TIC)": [
                                  "Succeeded"
                                ]
                              },
                              "type": "Http",
                              "inputs": {
                                "body": {
                                  "eventIdentifier": {
                                    "eventDescription": "@{variables('eventDescription')}",
                                    "systemEntity": "ticket",
                                    "systemName": "helpdesk"
                                  },
                                  "eventInformation": "@triggerBody()"
                                },
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Orchestrator_OAuth_Token')?['access_token']}",
                                  "Content-Type": "application/json",
                                  "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                },
                                "method": "POST",
                                "retryPolicy": {
                                  "type": "none"
                                },
                                "uri": "[variables('ProcessEventInformationUrl')]"
                              }
                            }
                          },
                          "runAfter": {
                            "Create_or_Update_Contact_in_CRM": [
                              "Succeeded"
                            ]
                          },
                          "type": "Scope"
                        }
                      },
                      "runAfter": {
                        "Request_Integration_Status_for_User_from_Rosetta_Stone": [
                          "Succeeded"
                        ]
                      },
                      "else": {
                        "actions": {
                          "Processing_will_cease_-_User_is_not_CrmSuitable": {
                            "actions": {},
                            "runAfter": {},
                            "type": "Scope"
                          }
                        }
                      },
                      "expression": {
                        "and": [
                          {
                            "equals": [
                              "@first(body('Filter_User_Integration_Status_Results'))?['ElementValue']",
                              "true"
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    },
                    "Create_or_Update_Account_in_CRM": {
                      "actions": {
                        "Check_results_are_more_than_zero_(ORG)": {
                          "actions": {
                            "Set_eventDescription_=_\"updated\"": {
                              "runAfter": {},
                              "type": "SetVariable",
                              "inputs": {
                                "name": "eventDescription",
                                "value": "updated"
                              }
                            }
                          },
                          "runAfter": {
                            "Request_Organization_ID_from_Rosetta_Stone": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Set_eventDescription_=_\"created\"": {
                                "runAfter": {},
                                "type": "SetVariable",
                                "inputs": {
                                  "name": "eventDescription",
                                  "value": "created"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(body('Parse_Rosetta_Stone_Results_(ORG)'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Request_Organization_ID_from_Rosetta_Stone": {
                          "actions": {
                            "Parse_Rosetta_Stone_Results_(ORG)": {
                              "runAfter": {
                                "Quiz_Rosetta_Stone_for_Organization_ID": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Quiz_Rosetta_Stone_for_Organization_ID')",
                                "schema": {
                                  "items": {
                                    "properties": {
                                      "SourceEntityBK": {
                                        "type": "string"
                                      },
                                      "SourceSorBK": {
                                        "type": "string"
                                      },
                                      "SourceSorUIDVal": {
                                        "type": "string"
                                      },
                                      "TargetSorBK": {
                                        "type": "string"
                                      },
                                      "TargetSorUIDVal": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "SourceSorBK",
                                      "SourceEntityBK",
                                      "SourceSorUIDVal",
                                      "TargetSorBK",
                                      "TargetSorUIDVal"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "Quiz_Rosetta_Stone_for_Organization_ID": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "body": {
                                  "SourceEntityBK": "ORG",
                                  "SourceSorBK": "HD",
                                  "SourceSorUIDVal": "@{triggerBody()?['ticket']?['organization']?['id']}",
                                  "TargetSorBK": "SCRM"
                                },
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                                  "Content-Type": "application/json",
                                  "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                },
                                "method": "POST",
                                "retryPolicy": {
                                  "type": "none"
                                },
                                "uri": "[variables('RegisterTranslateSorToTargetUrl')]"
                              }
                            }
                          },
                          "runAfter": {},
                          "type": "Scope"
                        },
                        "Trigger_the_helpdeski-organization-eventDescription_event_synchronously": {
                          "runAfter": {
                            "Check_results_are_more_than_zero_(ORG)": [
                              "Succeeded"
                            ]
                          },
                          "type": "Http",
                          "inputs": {
                            "body": {
                              "eventIdentifier": {
                                "eventDescription": "@{variables('eventDescription')}",
                                "systemEntity": "organization",
                                "systemName": "helpdeski"
                              },
                              "eventInformation": "@triggerBody()"
                            },
                            "headers": {
                              "Authorization": "Bearer @{body('Parse_Orchestrator_OAuth_Token')?['access_token']}",
                              "Content-Type": "application/json",
                              "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                            },
                            "method": "POST",
                            "retryPolicy": {
                              "type": "none"
                            },
                            "uri": "[variables('ProcessEventInformationUrl')]"
                          }
                        }
                      },
                      "runAfter": {},
                      "type": "Scope"
                    },
                    "Request_Integration_Status_for_User_from_Rosetta_Stone": {
                      "actions": {
                        "Filter_User_Integration_Status_Results": {
                          "runAfter": {
                            "Parse_User_Integration_Status_Results": [
                              "Succeeded"
                            ]
                          },
                          "type": "Query",
                          "inputs": {
                            "from": "@body('Parse_User_Integration_Status_Results')",
                            "where": "@equals(item()['SorBK'], 'SCRM')"
                          }
                        },
                        "Parse_User_Integration_Status_Results": {
                          "runAfter": {
                            "Quiz_Rosetta_Stone_for_User_Integration_Status": [
                              "Succeeded"
                            ]
                          },
                          "type": "ParseJson",
                          "inputs": {
                            "content": "@body('Quiz_Rosetta_Stone_for_User_Integration_Status')",
                            "schema": {
                              "items": {
                                "properties": {
                                  "ElementDescription": {
                                    "type": "string"
                                  },
                                  "ElementTypeBK": {
                                    "type": "string"
                                  },
                                  "ElementTypeName": {
                                    "type": "string"
                                  },
                                  "ElementValue": {
                                    "type": "string"
                                  },
                                  "EntityBK": {
                                    "type": "string"
                                  },
                                  "EntityName": {
                                    "type": "string"
                                  },
                                  "SorBK": {
                                    "type": "string"
                                  },
                                  "SorName": {
                                    "type": "string"
                                  }
                                },
                                "required": [
                                  "SorBK",
                                  "SorName",
                                  "EntityBK",
                                  "EntityName",
                                  "ElementTypeBK",
                                  "ElementTypeName",
                                  "ElementValue",
                                  "ElementDescription"
                                ],
                                "type": "object"
                              },
                              "type": "array"
                            }
                          }
                        },
                        "Quiz_Rosetta_Stone_for_User_Integration_Status": {
                          "runAfter": {},
                          "type": "Http",
                          "inputs": {
                            "body": {
                              "SourceElementTypeBK": "LK-crmsuitable",
                              "SourceElementValue": "@{triggerBody()?['ticket']?['requester']?['user_fields']?['contact_type']}",
                              "SourceEntityBK": "CNT",
                              "SourceSorBK": "HD",
                              "TargetSorBK": "SCRM"
                            },
                            "headers": {
                              "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                              "Content-Type": "application/json",
                              "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                            },
                            "method": "POST",
                            "uri": "[variables('ReferenceDataTranslateUrl')]"
                          }
                        }
                      },
                      "runAfter": {
                        "Create_or_Update_Account_in_CRM": [
                          "Succeeded"
                        ]
                      },
                      "type": "Scope"
                    }
                  },
                  "runAfter": {
                    "Request_Integration_Status_for_Organisation_from_Rosetta_Stone": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Processing_will_cease_-_Organization_is_not_CrmSuitable": {
                        "actions": {},
                        "runAfter": {},
                        "type": "Scope"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "equals": [
                          "@first(body('Filter_Organization_Integration_Status_Results'))?['ElementValue']",
                          "true"
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Request_Integration_Status_for_Organisation_from_Rosetta_Stone": {
                  "actions": {
                    "Filter_Organization_Integration_Status_Results": {
                      "runAfter": {
                        "Parse_Organization_Integration_Status_Results": [
                          "Succeeded"
                        ]
                      },
                      "type": "Query",
                      "inputs": {
                        "from": "@body('Parse_Organization_Integration_Status_Results')",
                        "where": "@equals(item()['SorBK'], 'SCRM')"
                      }
                    },
                    "Parse_Organization_Integration_Status_Results": {
                      "runAfter": {
                        "Quiz_Rosetta_Stone_for_Organization's_Integration_Status": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Quiz_Rosetta_Stone_for_Organization''s_Integration_Status')",
                        "schema": {
                          "items": {
                            "properties": {
                              "ElementDescription": {
                                "type": "string"
                              },
                              "ElementTypeBK": {
                                "type": "string"
                              },
                              "ElementTypeName": {
                                "type": "string"
                              },
                              "ElementValue": {
                                "type": "string"
                              },
                              "EntityBK": {
                                "type": "string"
                              },
                              "EntityName": {
                                "type": "string"
                              },
                              "SorBK": {
                                "type": "string"
                              },
                              "SorName": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "SorBK",
                              "SorName",
                              "EntityBK",
                              "EntityName",
                              "ElementTypeBK",
                              "ElementTypeName",
                              "ElementValue",
                              "ElementDescription"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    },
                    "Quiz_Rosetta_Stone_for_Organization's_Integration_Status": {
                      "runAfter": {},
                      "type": "Http",
                      "inputs": {
                        "body": {
                          "SourceElementTypeBK": "LK-crmsuitable",
                          "SourceElementValue": "@{triggerBody()?['ticket']?['organization']?['organization_fields']?['organisation_type']}",
                          "SourceEntityBK": "ORG",
                          "SourceSorBK": "HD",
                          "TargetSorBK": "SCRM"
                        },
                        "headers": {
                          "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                          "Content-Type": "application/json",
                          "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                        },
                        "method": "POST",
                        "uri": "[variables('ReferenceDataTranslateUrl')]"
                      }
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "runAfter": {
                "Initialise_the_eventDescription_variable": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Finish": {
              "runAfter": {
                "CRM_Integration": [
                  "Succeeded"
                ],
                "ITSM_Integration": [
                  "Succeeded"
                ]
              },
              "type": "Response",
              "kind": "Http",
              "inputs": {
                "statusCode": 200
              }
            },
            "ITSM_Integration": {
              "actions": {
                "Check_results_are_more_than_zero_(TIC-SNOW)": {
                  "actions": {
                    "For_Each_Comment": {
                      "foreach": "@triggerBody()?['ticket']?['comments']",
                      "actions": {
                        "Check_results_are_more_than_zero_(CMT)": {
                          "actions": {},
                          "runAfter": {
                            "Request_Comment_ID_from_Rosetta_Stone": [
                              "Succeeded"
                            ]
                          },
                          "else": {
                            "actions": {
                              "Check_attachments_are_present": {
                                "actions": {
                                  "For_Each_Attachment": {
                                    "foreach": "@items('For_Each_Comment')?['attachments']",
                                    "actions": {
                                      "Append_attachment_to_attachmentsArray": {
                                        "runAfter": {},
                                        "type": "AppendToArrayVariable",
                                        "inputs": {
                                          "name": "attachmentsArray",
                                          "value": {
                                            "file_name": "@{items('For_Each_Attachment')?['file_name']}",
                                            "url": "@{items('For_Each_Attachment')?['url']}"
                                          }
                                        }
                                      }
                                    },
                                    "runAfter": {},
                                    "type": "Foreach"
                                  }
                                },
                                "runAfter": {
                                  "Trigger_the_helpdesk-comment-created_event_synchronously": [
                                    "Succeeded"
                                  ]
                                },
                                "expression": {
                                  "and": [
                                    {
                                      "equals": [
                                        "@empty(items('For_Each_Comment')?['attachments'])",
                                        false
                                      ]
                                    }
                                  ]
                                },
                                "type": "If"
                              },
                              "Trigger_the_helpdesk-comment-created_event_synchronously": {
                                "runAfter": {},
                                "type": "Http",
                                "inputs": {
                                  "body": {
                                    "eventIdentifier": {
                                      "eventDescription": "created",
                                      "systemEntity": "comment",
                                      "systemName": "helpdesk"
                                    },
                                    "eventInformation": {
                                      "ticket": {
                                        "id": "@{triggerBody()?['ticket']?['id']}",
                                        "latest_comment": {
                                          "body": "@{items('For_Each_Comment')?['body']}",
                                          "id": "@{items('For_Each_Comment')?['id']}"
                                        }
                                      }
                                    }
                                  },
                                  "headers": {
                                    "Authorization": "Bearer @{body('Parse_Orchestrator_OAuth_Token')?['access_token']}",
                                    "Content-Type": "application/json",
                                    "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                  },
                                  "method": "POST",
                                  "retryPolicy": {
                                    "type": "none"
                                  },
                                  "uri": "[variables('ProcessEventInformationUrl')]"
                                }
                              }
                            }
                          },
                          "expression": {
                            "and": [
                              {
                                "greater": [
                                  "@length(body('Parse_Rosetta_Stone_Results_(CMT)'))",
                                  0
                                ]
                              }
                            ]
                          },
                          "type": "If"
                        },
                        "Request_Comment_ID_from_Rosetta_Stone": {
                          "actions": {
                            "Parse_Rosetta_Stone_Results_(CMT)": {
                              "runAfter": {
                                "Quiz_Rosetta_Stone_for_Comment_ID": [
                                  "Succeeded"
                                ]
                              },
                              "type": "ParseJson",
                              "inputs": {
                                "content": "@body('Quiz_Rosetta_Stone_for_Comment_ID')",
                                "schema": {
                                  "items": {
                                    "properties": {
                                      "SourceEntityBK": {
                                        "type": "string"
                                      },
                                      "SourceSorBK": {
                                        "type": "string"
                                      },
                                      "SourceSorUIDVal": {
                                        "type": "string"
                                      },
                                      "TargetSorBK": {
                                        "type": "string"
                                      },
                                      "TargetSorUIDVal": {
                                        "type": "string"
                                      }
                                    },
                                    "required": [
                                      "SourceSorBK",
                                      "SourceEntityBK",
                                      "SourceSorUIDVal",
                                      "TargetSorBK",
                                      "TargetSorUIDVal"
                                    ],
                                    "type": "object"
                                  },
                                  "type": "array"
                                }
                              }
                            },
                            "Quiz_Rosetta_Stone_for_Comment_ID": {
                              "runAfter": {},
                              "type": "Http",
                              "inputs": {
                                "body": {
                                  "SourceEntityBK": "CMT",
                                  "SourceSorBK": "HD",
                                  "SourceSorUIDVal": "@{items('For_Each_Comment')?['id']}",
                                  "TargetSorBK": "SNOW"
                                },
                                "headers": {
                                  "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                                  "Content-Type": "application/json",
                                  "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                                },
                                "method": "POST",
                                "retryPolicy": {
                                  "type": "none"
                                },
                                "uri": "[variables('RegisterTranslateSorToTargetUrl')]"
                              }
                            }
                          },
                          "runAfter": {},
                          "type": "Scope"
                        }
                      },
                      "runAfter": {},
                      "type": "Foreach"
                    },
                    "If_attachmentsArray_has_items": {
                      "actions": {
                        "Trigger_the_helpdesk-attachment-created_event_synchronously": {
                          "runAfter": {},
                          "type": "Http",
                          "inputs": {
                            "body": {
                              "eventIdentifier": {
                                "eventDescription": "created",
                                "systemEntity": "attachment",
                                "systemName": "helpdesk"
                              },
                              "eventInformation": {
                                "ticket": {
                                  "attachments": "@variables('attachmentsArray')",
                                  "id": "@{triggerBody()?['ticket']?['id']}"
                                }
                              }
                            },
                            "headers": {
                              "Authorization": "Bearer @{body('Parse_Orchestrator_OAuth_Token')?['access_token']}",
                              "Content-Type": "application/json",
                              "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                            },
                            "method": "POST",
                            "retryPolicy": {
                              "type": "none"
                            },
                            "uri": "[variables('ProcessEventInformationUrl')]"
                          }
                        }
                      },
                      "runAfter": {
                        "For_Each_Comment": [
                          "Succeeded"
                        ]
                      },
                      "expression": {
                        "and": [
                          {
                            "greater": [
                              "@length(variables('attachmentsArray'))",
                              0
                            ]
                          }
                        ]
                      },
                      "type": "If"
                    }
                  },
                  "runAfter": {
                    "Request_Ticket_ID_from_Rosetta_Stone_(ITSM)": [
                      "Succeeded"
                    ]
                  },
                  "else": {
                    "actions": {
                      "Processing_will_cease_-_the_ticket_was_not_escalated_to_ITSM": {
                        "actions": {},
                        "runAfter": {},
                        "type": "Scope"
                      }
                    }
                  },
                  "expression": {
                    "and": [
                      {
                        "greater": [
                          "@length(body('Parse_Rosetta_Stone_Results_(TIC-SNOW)'))",
                          0
                        ]
                      },
                      {
                        "equals": [
                          "@empty(triggerBody()?['ticket']?['comments'])",
                          false
                        ]
                      }
                    ]
                  },
                  "type": "If"
                },
                "Request_Ticket_ID_from_Rosetta_Stone_(ITSM)": {
                  "actions": {
                    "Parse_Rosetta_Stone_Results_(TIC-SNOW)": {
                      "runAfter": {
                        "Quiz_Rosetta_Stone_for_Ticket_ID_(ITSM)": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Quiz_Rosetta_Stone_for_Ticket_ID_(ITSM)')",
                        "schema": {
                          "items": {
                            "properties": {
                              "SourceEntityBK": {
                                "type": "string"
                              },
                              "SourceSorBK": {
                                "type": "string"
                              },
                              "SourceSorUIDVal": {
                                "type": "string"
                              },
                              "TargetSorBK": {
                                "type": "string"
                              },
                              "TargetSorUIDVal": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "SourceSorBK",
                              "SourceEntityBK",
                              "SourceSorUIDVal",
                              "TargetSorBK",
                              "TargetSorUIDVal"
                            ],
                            "type": "object"
                          },
                          "type": "array"
                        }
                      }
                    },
                    "Quiz_Rosetta_Stone_for_Ticket_ID_(ITSM)": {
                      "runAfter": {},
                      "type": "Http",
                      "inputs": {
                        "body": {
                          "SourceEntityBK": "TIC",
                          "SourceSorBK": "HD",
                          "SourceSorUIDVal": "@{triggerBody()?['ticket']?['id']}",
                          "TargetSorBK": "SNOW"
                        },
                        "headers": {
                          "Authorization": "Bearer @{body('Parse_Rosetta_Stone_OAuth_Token')?['access_token']}",
                          "Content-Type": "application/json",
                          "Ocp-Apim-Subscription-Key": "@body('Parse_apim-custeng-dataservicessubscriptionkey')?['value']"
                        },
                        "method": "POST",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[variables('RegisterTranslateSorToTargetUrl')]"
                      }
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "runAfter": {
                "Initialise_the_attachmentsArray_variable": [
                  "Succeeded"
                ]
              },
              "type": "Scope"
            },
            "Initialise_the_attachmentsArray_variable": {
              "runAfter": {
                "Request_Commonly_Used_OAuth_Tokens_and_Subscription_Keys": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "attachmentsArray",
                    "type": "Array"
                  }
                ]
              }
            },
            "Initialise_the_eventDescription_variable": {
              "runAfter": {
                "Request_Commonly_Used_OAuth_Tokens_and_Subscription_Keys": [
                  "Succeeded"
                ]
              },
              "type": "InitializeVariable",
              "inputs": {
                "variables": [
                  {
                    "name": "eventDescription",
                    "type": "String"
                  }
                ]
              }
            },
            "Request_Commonly_Used_OAuth_Tokens_and_Subscription_Keys": {
              "actions": {
                "Request_and_Parse_Data_Services_Subscription_Key": {
                  "actions": {
                    "Get_apim-custeng-dataservicessubscriptionkey_from_KeyVault": {
                      "runAfter": {},
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "https://vault.azure.net",
                          "type": "ManagedServiceIdentity"
                        },
                        "headers": {
                          "Content-Type": "application/json"
                        },
                        "method": "GET",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[variables('DataServicesKeyUrl')]"
                      }
                    },
                    "Parse_apim-custeng-dataservicessubscriptionkey": {
                      "runAfter": {
                        "Get_apim-custeng-dataservicessubscriptionkey_from_KeyVault": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_apim-custeng-dataservicessubscriptionkey_from_KeyVault')",
                        "schema": {
                          "properties": {
                            "attributes": {
                              "properties": {
                                "created": {
                                  "type": "integer"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "recoveryLevel": {
                                  "type": "string"
                                },
                                "updated": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Request_and_Parse_Rosetta_Stone_OAuth_Token": [
                      "Succeeded"
                    ]
                  },
                  "type": "Scope"
                },
                "Request_and_Parse_Orchestrator_OAuth_Token": {
                  "actions": {
                    "Get_Orchestrator_OAuth_Token": {
                      "runAfter": {
                        "Parse_la-05-orchestratorapitokenrequestpayload": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "@body('Parse_la-05-orchestratorapitokenrequestpayload')?['value']",
                        "headers": {
                          "Content-Type": "application/x-www-form-urlencoded"
                        },
                        "method": "POST",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[variables('OAuthTokenEndpoint')]"
                      }
                    },
                    "Get_la-05-orchestratorapitokenrequestpayload_from_KeyVault": {
                      "runAfter": {},
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "https://vault.azure.net",
                          "type": "ManagedServiceIdentity"
                        },
                        "headers": {
                          "Content-Type": "application/json"
                        },
                        "method": "GET",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[variables('OrchestratorApiTokenRequestPayloadUrl')]"
                      }
                    },
                    "Parse_Orchestrator_OAuth_Token": {
                      "runAfter": {
                        "Get_Orchestrator_OAuth_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Orchestrator_OAuth_Token')",
                        "schema": {
                          "properties": {
                            "access_token": {
                              "type": "string"
                            },
                            "expires_in": {
                              "type": "string"
                            },
                            "expires_on": {
                              "type": "string"
                            },
                            "ext_expires_in": {
                              "type": "string"
                            },
                            "not_before": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "token_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_la-05-orchestratorapitokenrequestpayload": {
                      "runAfter": {
                        "Get_la-05-orchestratorapitokenrequestpayload_from_KeyVault": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_la-05-orchestratorapitokenrequestpayload_from_KeyVault')",
                        "schema": {
                          "properties": {
                            "attributes": {
                              "properties": {
                                "created": {
                                  "type": "integer"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "recoveryLevel": {
                                  "type": "string"
                                },
                                "updated": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "runAfter": {
                    "Request_and_Parse_Data_Services_Subscription_Key": [
                      "Succeeded"
                    ]
                  },
                  "type": "Scope"
                },
                "Request_and_Parse_Rosetta_Stone_OAuth_Token": {
                  "actions": {
                    "Get_Rosetta_Stone_OAuth_Token": {
                      "runAfter": {
                        "Parse_fa-02-rosettastoneapitokenrequestpayload": [
                          "Succeeded"
                        ]
                      },
                      "type": "Http",
                      "inputs": {
                        "body": "@body('Parse_fa-02-rosettastoneapitokenrequestpayload')?['value']",
                        "headers": {
                          "Content-Type": "application/x-www-form-urlencoded"
                        },
                        "method": "POST",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[variables('OAuthTokenEndpoint')]"
                      }
                    },
                    "Get_fa-02-rosettastoneapitokenrequestpayload_from_KeyVault": {
                      "runAfter": {},
                      "type": "Http",
                      "inputs": {
                        "authentication": {
                          "audience": "https://vault.azure.net",
                          "type": "ManagedServiceIdentity"
                        },
                        "headers": {
                          "Content-Type": "application/json"
                        },
                        "method": "GET",
                        "retryPolicy": {
                          "type": "none"
                        },
                        "uri": "[variables('RosettaStoneApiTokenPayloadUrl')]"
                      }
                    },
                    "Parse_Rosetta_Stone_OAuth_Token": {
                      "runAfter": {
                        "Get_Rosetta_Stone_OAuth_Token": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_Rosetta_Stone_OAuth_Token')",
                        "schema": {
                          "properties": {
                            "access_token": {
                              "type": "string"
                            },
                            "expires_in": {
                              "type": "string"
                            },
                            "expires_on": {
                              "type": "string"
                            },
                            "ext_expires_in": {
                              "type": "string"
                            },
                            "not_before": {
                              "type": "string"
                            },
                            "resource": {
                              "type": "string"
                            },
                            "token_type": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "Parse_fa-02-rosettastoneapitokenrequestpayload": {
                      "runAfter": {
                        "Get_fa-02-rosettastoneapitokenrequestpayload_from_KeyVault": [
                          "Succeeded"
                        ]
                      },
                      "type": "ParseJson",
                      "inputs": {
                        "content": "@body('Get_fa-02-rosettastoneapitokenrequestpayload_from_KeyVault')",
                        "schema": {
                          "properties": {
                            "attributes": {
                              "properties": {
                                "created": {
                                  "type": "integer"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "recoveryLevel": {
                                  "type": "string"
                                },
                                "updated": {
                                  "type": "integer"
                                }
                              },
                              "type": "object"
                            },
                            "id": {
                              "type": "string"
                            },
                            "value": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    }
                  },
                  "runAfter": {},
                  "type": "Scope"
                }
              },
              "runAfter": {},
              "type": "Scope"
            }
          },
          "outputs": {}
        },
        "parameters": {}
      }
    }
  ]
}
