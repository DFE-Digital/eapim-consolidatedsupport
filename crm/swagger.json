{
  "swagger": "2.0",
  "info": {
    "title": "CRM API",
    "version": "1.0",
    "description": "Provides access to CRM related operations."
  },
  "host": "esfa-cs-dev.api.crm4.dynamics.com",
  "schemes": [
    "https"
  ],
  "basePath": "/api/data/v9.1",
  "paths": {
    "/accounts": {
      "post": {
        "summary": "Create Account",
        "description": "Creates an account entity.",
        "operationId": "create-account",
        "parameters": [
          {
            "in": "body",
            "name": "Account Data",
            "description": "A JSON payload containing the account data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The account was created with success.",
            "headers": {
              "Entity-Id": {
                "type": "string",
                "description": "The id of the created account."
              }
            }
          }
        }
      }
    },
    "/accounts({id})": {
      "get": {
        "summary": "Get Account",
        "description": "Gets an account entity.",
        "operationId": "get-account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The ID of the account to get."
          }
        ],
        "responses": {
          "200": {
            "description": "The account was found."
          },
          "404": {
            "description": "The account does not exist."
          }
        }
      },
      "patch": {
        "summary": "Update Account",
        "description": "Updates an account entity.",
        "operationId": "update-account",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The ID of the account to update."
          },
          {
            "in": "body",
            "name": "Account Data",
            "description": "A JSON payload containing the account data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The account was updated with success."
          }
        }
      }
    },
    "/annotations": {
      "post": {
        "summary": "Create Annotation",
        "description": "Creates an annotation entity.",
        "operationId": "create-annotation",
        "parameters": [
          {
            "in": "body",
            "name": "Annotation Data",
            "description": "A JSON payload containing the annotation data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The annotation was created with success.",
            "headers": {
              "Entity-Id": {
                "type": "string",
                "description": "The id of the created annotation."
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "post": {
        "summary": "Create Contact",
        "description": "Creates a contact entity.",
        "operationId": "create-contact",
        "parameters": [
          {
            "in": "body",
            "name": "Contact Data",
            "description": "A JSON payload containing the contact data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The contact was created with success.",
            "headers": {
              "Entity-Id": {
                "type": "string",
                "description": "The id of the created contact."
              }
            }
          }
        }
      }
    },
    "/contacts({id})": {
      "patch": {
        "summary": "Update Contact",
        "description": "Updates a contact entity.",
        "operationId": "update-contact",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The ID of the contact to update."
          },
          {
            "in": "body",
            "name": "Contact Data",
            "description": "A JSON payload containing the contact data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The contact was updated with success."
          }
        }
      }
    },
    "/CloseIncident": {
      "post": {
        "summary": "Close Incident",
        "description": "Closes an incident.",
        "operationId": "close-incident",
        "parameters": [
          {
            "in": "body",
            "name": "Incident Data",
            "description": "A JSON payload containing the incident data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The incident was closed with success."
          }
        }
      }
    },
    "/incidents": {
      "post": {
        "summary": "Create Incident",
        "description": "Creates an incident entity.",
        "operationId": "create-incident",
        "parameters": [
          {
            "in": "body",
            "name": "Incident Data",
            "description": "A JSON payload containing the incident data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The incident was created with success.",
            "headers": {
              "Entity-Id": {
                "type": "string",
                "description": "The id of the created incident."
              }
            }
          }
        }
      }
    },
    "/incidents({id})": {
      "patch": {
        "summary": "Update Incident",
        "description": "Updates an incident entity.",
        "operationId": "update-incident",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "type": "string",
            "required": true,
            "description": "The ID of the incident to update."
          },
          {
            "in": "body",
            "name": "Incident Data",
            "description": "A JSON payload containing the incident data.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/crm-data"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The incident was updated with success."
          }
        }
      }
    },
    "/heart-beat": {
      "get": {
        "description": "Standard diagnostics method, used to test the health of the facade's underlying system.",
        "operationId": "heart-beat",
        "parameters": [],
        "responses": {
          "200": {
            "description": "The standard/only response from the method."
          }
        }
      }
    }
  },
  "definitions": {
    "crm-data": {
      "type": "object"
    }
  }
}